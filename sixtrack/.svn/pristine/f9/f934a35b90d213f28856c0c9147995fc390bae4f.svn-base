----------------------------------------------------------------------------
remarks for R.DeMaria
NB: 'fluka' is a good regexp to look for, but 
     flukaname/flukavars/FLUKA_impacts can be found: 
     this is something related to the collimation version...
----------------------------------------------------------------------------
* npart moved from 64 to 2000;
  several writing/post-processing in units 91 - mod(ia-1, 32):
  with npart=2000, this is a problem (never used these units so far);
  solution: let's remove post-processing and plotting!
  -> code under .not.fluka preprocessor:
     . open/close unit statements;
     . routines (+dk tra_thin):
       subroutine writebin
       subroutine write6
  -> decks removed by make_six:
     . POSTPR:
       subroutine postpr
       subroutine fft
       subroutine caconv
       subroutine cphase
       subroutine cinvar
       subroutine sinpro
     . JOIN:
       subroutine join
     . SUMPOS:
       subroutine sumpos
     . plotdumy:
       subroutine hbook2
       subroutine hdelet
       subroutine hlimit
       subroutine hplax
       subroutine hplcap
       subroutine hplend
       subroutine hplint
       subroutine hplopt
       subroutine hplot
       subroutine hplset
       subroutine hplsiz
       subroutine hplsof
       subroutine htitle
       subroutine ipl
       subroutine ipm
       subroutine iselnt
       subroutine igmeta
     . nagdumy:
       subroutine e04ucf
       subroutine e04uef
       subroutine e04udm
       subroutine x04abf
  NB: I haven't checked if routines inside the following ones
      are useless (and thus could be left out) or called somewhere else
      (thus must be left in the code):
       subroutine postpr
  -> other decks (just a reminder):
     . checkpt (removed by -cr option, default)
       subroutine crcheck
       subroutine crpoint
       subroutine crstart

* modified mass of proton/electron, to match FLUKA values
  (under fluka pre-processing flag);
  NB: identified the source of the two values for the electrons,
      but not for the protons;

* thick lens tracking: modifications are there, but never tested;
  -> envarsv and blocksv re-initialise entirely the al(...),as(...)
     and hv(...),bl1v(...) arrays, respectively (under fluka pre-processor);
  -> synuthck has been kept unchanged;

* acceleration: modifications are there, but never tested;

* sigmv is updated anyway, no matter if we are in 4d/6d/6dua tracking;

* fluka lattice entries must be SINGLE ELEMENTs outside BLOCks;
  when modifying this assumption, please change also dcum logics;

* additional particle variables (stored in mod_fluka.f90):
  - uid and gen: unique labelling;         | at the moment, assigned
  - statistical weight: fluka biased run;  |    in mod_fluka.f90;
  - rest mass (particles other than protons and electrons), atomic and mass
    number (for ions: only temporary vars, at the moment;
  could they be of help for other purposes (e.g. ions, other particles,
    special analyses)?

* no '+if cr' duplicates: messages are sent just on standard output;
  -> why not creating a 'lunout' variable, set to different values
     if cr is requested or not (default: 6, ie stdout, ie equiv to '*')?
  -> more in general for management of units: what about a common?

* aperture check:
  original lines fully removed:
  - general aperture check at every element (inline check against
    aper(1) and aper(2)); 
    if at least a particle is lost, there's a more refined check
    with lostpar2() (general), lostpar3() (RE) and lostpar4() (EL),
    re-performing the general one, if locally the element is not assigned
    an aperture profile;
  - general aperture check also at the end of a turn (lostpart());
  - based on kp var (used also for other purposes, e.g. monitor/corrector);
  - napx was updated to lnapx AFTER synuthck;
  new approach (under .not.collimat):
  - only one routine, lostpart(...), called every time but NOT at BLOCks;
  - aperture types: original ones (general, RE and EL) + RL by amereghe + 
    racetrack and octagon by pgarciao;
    every aperture type has a function defining how the check is performed;
  - in case, offsets / tilts of the aperture profile are considered;
  - dump of lost particle in unit 999 and compacting arrays;
  - additional calls to routines essential for thick lens tracking
    are put outside the lostpart(...) routine;
  - back-tracking 'a la' collimation team (ie linear interpolation
    of position over a drift), for better evaluate loss points;
    . precision on loss location can be set by the user from fort.3 file;
  - myisnan() has been kept: is it really necessary?!
  open implementation points:
  - as it is implemented right now, the aperture check is always done,
    at least against the general aperture settings (as in SixTrack release): 
    is it ok?

* dump/stat implementation;

* closure of simulation:
  - flukaclose (+cd) inserted at the end of maincr (regular closure)
    and in prror (abnormal closure);
  - created subroutine closeUnits (very dirty), called whenever 
    simulation shuts down (no matter if for coupling or not...);

* calculation of distance cumule': it's really the calculation of the 
  s-coordinate, as done in linopt and in daten for BLOCs;
  NB: it doesn't check if we are in thick or thin lens tracking...

* linopt: changed, in order to dump infos in almost all cases
  (even incovenient ones):
  - thin main dipoles (kz()=11) with cref=0.0 (ie multipole block ignored)
    (actually, cref is stored in ek(ix), and locally copied in r0, on
    which the code performs the actual check):
    . no printout at all was given;
  - thin main dipoles (kz()=11) with nmu()=0.0 (ie no multipole block):
    . no printout at all was given, in case of native sixtrack;
    . non updated nr, in case of bnlelens or collimat;
  - beam-beam and phase-trombone:
    . no printout at all was given, in case of native sixtrack;
    . non updated nr, in case of bnlelens or collimat;
  - when writelin was called, cpltwis was not always there;

* particle distribution generated externally (idfor=3):
  - out of main loop over sampling/reading particles (native in SixTrack);
  - no dump of particles with native SixTrack format;
  -> what about definitively moving to external routines for generating 
     the beam?

* estimation of computing time:
  if fluka pre-processing is active, napxto is updated at the end of every
  turn, so that we have a better estimation of the product napx*turns,
  for evaluating the average CPU time per tracked primary;

* makefiles:
  only make_six and Makefile.template are changed;
  -> see remarks on merging r169;





* dynamic kicks: only for thin lens elements, between -10 and 10;
  -> entry points are there: modifications are needed, for extending the
     range of validity;

----------------------------------------------------------------------------
open implementation points
----------------------------------------------------------------------------
* g77 was dropped in r140 (SixTrack release) for pgf90;
  -> maybe useful to keep, as gfortran compiler sucks for debugging...
* *da subroutines?
  -> not touched at all!
* what to do with calculation of distance in phase space (ie dist1 and
  distance subroutines)?

----------------------------------------------------------------------------
remarks about merging with r169
----------------------------------------------------------------------------
general remarks:
+ sixtrack version originally in coupling: r136 (September 2012);
+ svn entries of files present in r18, but not in r169 -> deleted;

punctual remarks:
+ ast_mask/*: fluka flag active also in ast files for sixtrack_da
  	      (ie beamgas.ast);
+ tools/*:    all accepted (all new files, introduced in r152);
+ crlibm/*:   round_near.c, disable_xp.c and enable_xp.c: imported 
  	      modifications after last merging by dsinuela;
+ lib32/*:    no modifications;
+ Makefile.boinc.template: imported modifications (release, r151) 
  	      after last merging by dsinuela;
+ Makefile.template imported modifications (release, r151) after last 
  	      merging by dsinuela;
+ link_intel.bat.template: imported modifications (release, r146) 
  	      after last merging by dsinuela;
+ dabnew.s:   imported modifications (release, r153) after last 
  	      merging by dsinuela;
+ myboinc.f:  imported modifications (release, r151) after last 
  	      merging by dsinuela;
+ make_six:   
  . g77 is kept and pgf90 is simply added (release, r140);
  . gcc libraries now stored in dedicated variables, and not
    hard-coded anymore; -> those for SL4 are still there;
  . no documentation about FCLD... (intorduced in release, r146);
    -> it's only in Makefile.template, not in Makefile.boinc.template
       or Makefile.boinc.mac.template;
    -> updated accordingly;
  . static linking now triggered by terminal line option
    (coupling r271 saved the original make_six in make_six.static);
  . changed chains of 'if' statements when checking $MACHTYPE into
    a 'case' statements;
+ sixtrack.s:
  merging between last release version (r169) and coupling version (r432);
  830 text lines of difference, dealt in one working day: thanks to
  svn and tkdiff;

----------------------------------------------------------------------------
remarks about merging with r179
----------------------------------------------------------------------------
general remarks:
+ sixtrack version originally in coupling: r169 (March 2013);
+ no conflicts to be solved :)

----------------------------------------------------------------------------
(handy) main events in official SixTrack release
----------------------------------------------------------------------------
+ r137:
  - sixsrc.py;
+ r140:
  - no more g77;
  - addition of checkpoints;
+ r142:
  - change of some flags in make_six;
+ r152:
  - tools from ldeniau;
+ r160-161-162:
  - license;
+ r164:
  - exact drifts;
+ r165-166:
  - read_fortbin.py;
+ r172:
  - major changes from collimation team:
    . pencil beam by rbruce;
    . new scattering routine by ctambasco and dmirarchi;
    . some changes in I/O;
+ r176:
  - changes in beam-beam element;
